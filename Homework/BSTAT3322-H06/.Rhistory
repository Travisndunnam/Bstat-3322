rm( list=ls())               # Clear environment.
#
#
###########################################################
# source causes R to accept its input from the named file #
# or URL or connection. Input is read and parsed from     #
# file until the end of the file is reached, then the     #
# parsed expressions are evaluated sequentially in the    #
# chosen environment.                                     #
#                                                         #
# This allows us to reuse scripts.                        #
#                                                         #
###########################################################
#
source('C:/Users/Craig/BSTAT3322/Homework/BSTAT3322-H06/ggQQ.R')
y <- rnorm( n=30, mean=75, sd=5   )
ggQQ( y )
# Demos using function ggQQ.r
#
###########################################################
# This function draws a normal quantitle-Quantile plot    #
# of a  vector of observed data values.  It automatically #
# removes misssing values and draws  the theoretical QQ   #
# line based on 50% trimed regression.                    #
###########################################################
#
rm( list=ls())               # Clear environment.
#
#
###########################################################
# source causes R to accept its input from the named file #
# or URL or connection. Input is read and parsed from     #
# file until the end of the file is reached, then the     #
# parsed expressions are evaluated sequentially in the    #
# chosen environment.                                     #
#                                                         #
# This allows us to reuse scripts.                        #
#                                                         #
###########################################################
#
source('C:/Users/Craig/BSTAT3322/Homework/BSTAT3322-H06/ggQQ.R')
y <- rnorm( n=30, mean=75, sd=5  )
ggQQ( y )
shapiro.( y )
shapiro.t( y )
shapiro.test( y )
require(nortest)
?nortest
source('C:/Users/Craig/BSTAT3322/Homework/BSTAT3322-H06/CheckNormality.r')
ggtitle( "Noraml QQ plot: n = 16" )
y <- rnorm( n=16, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( "Noraml QQ plot: n = 16" )
p
shapiro.test( y )
y <- rnorm( n=16, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( "Noraml QQ plot: n = 16" )p
shapiro.test
ad.test( y )
y <- rnorm( n=16, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( "Noraml QQ plot: n = 16" )p
shapiro.test( y )
ad.test( y )
source('C:/Users/Craig/BSTAT3322/Homework/BSTAT3322-H06/CheckNormality.r')
source('C:/Users/Craig/BSTAT3322/Homework/BSTAT3322-H06/CheckNormality.r')
n <- 16
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( paste( "Noraml QQ plot: n = ", n ))
shapiro.test( y )
ad.test( y )
n <- 32
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( "Noraml QQ plot: n = 16" )p
shapiro.test( y )
ad.test( y )
n <- 32
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( paste( "Noraml QQ plot: n = ", n ))
shapiro.test( y )
ad.test( y )
n <- 32
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( paste( "Noraml QQ plot: n = ", n ))
shapiro.test( y )
ad.test( y )
n <- 32
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( paste( "Noraml QQ plot: n = ", n ))
shapiro.test( y )
ad.test( y )
n <- 16
y <- rnorm( n, mean=75, sd=5  )
p <- ggQQ( y ) +
ggtitle( paste( "Noraml QQ plot: n = ", n ))
shapiro.test( y )
ad.test( y )
unlink("Draft.csv")
unlink("Stock.csv")
unling("CheckNormality.r")
unlink("CheckNormality.r")
unlink("ggQQ.r")
unlink("SamllSample.r")
unlink("Draft.R")
unlink("SamllSample.e")
unlink("SamllSample.r")
unlink("SmallSample.r")
DF =seq( 1:50 )
)
df <- c( 1:2, 1:5, 1:10, 1:15, 1:20
))
rm( list=ls())
DF <- c( 1:2,  1:5, 1:10, 1:15, 1:20,
1:30, 1:40, 1:50, 1:60, 1:70,
1:80, 1:90, 1:100))
DF <- c( 1:2,  1:5, 1:10, 1:15, 1:20,
1:30, 1:40, 1:50, 1:60, 1:70,
1:80, 1:90, 1:100 ))
DF <- c( 1:2,  1:5, 1:10, 1:15, 1:20,
1:30, 1:40, 1:50, 1:60, 1:70,
1:80, 1:90, 1:100 ))
DF <- c( 1:2,  1:5, 1:10, 1:15, 1:20 )
DF <- c( 1:2,  1:5, 1:10, 1:15, 1:20,
seq( 20, 100, 5 ))
DF <- c( rep( 1, 20 ),
rep( 2. 15 ),
rep( 3, 10 ),
rep( 4, 5  ),
1:100 )
DF <- c( rep( 1, 20 ),
rep( 2. 15 ),
rep( 3, 10 ),
rep( 4, 5  ),
1:100 )
DF <- c( rep( 1, 20 ),
rep( 2. 15 ),
rep( 3, 10 ),
rep( 4, 5  ))
rep(4, 5)
DF <- c( rep( 1, 20 ))
DF <- c( rep( 1, 20 ),
rep( 2, 15 ))
DF <- c( rep( 1, 20 ),
rep( 2, 15 ),
rep( 3, 10))
DF <- c( rep( 1, 20 ),
rep( 2, 15 ),
rep( 3, 10),
rep( 4, 5 ))
DF <- c( rep( 1, 20 ),
rep( 2, 15 ),
rep( 3, 10),
rep( 4, 5 ),
seq( 5,100,1 ))
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
j <- sample.int( length(DF), 1 )
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5,1000,1 ))
j <- sample.int( length(DF), 1 )
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5,1000,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
n <- round( runif( 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
n <- round( runif( 1, 30, 265 ))
dailyReturn <- MU + SIGMA * rt( n, df )
MU    <- 0
SIGMA <- 0.001
n <- round( runif( 1, 30, 260 ))
dailyReturn <- MU + SIGMA * rt( n, df )
dailyReturn <- MU + SIGMA * rt( n, df )
Price <- lag(Price)
price <- lag(price)
Sticks      <- data.frame( day, dailyReturn  )
day         <- 1:llength( dailyReturn )
day         <- 1:length( dailyReturn )
Stocks      <- data.frame( day, dailyReturn  )
Stock       <- data.frame( day, dailyReturn  )
write.csv( Stocks, file="Stock.csv")
rm( list=ls())
# Stocks.r
#
rm( list=ls())
DF <- c( rep( 1, 32 ),
rep( 2, 64 ),
rep( 3, 128),
rep( 4, 256 ),
seq( 5, 512,1 ))
j <- sample.int( length(DF), 1 )
df <- DF[j]
price <- 100
MU    <- 0
SIGMA <- 0.001
n <- round( runif( 1, 30, 260 ))
dailyReturn <- MU + SIGMA * rt( n, df )
day         <- 1:length( dailyReturn )
Stock       <- data.frame( day, dailyReturn  )
write.csv( Stock, file="Stock.csv")
rm( list=ls())
unlink("Stocks.r")
FrenchDraftHeights.rS
rm( list=ls())
N <- floor( runif( 1, 100000, 200000 ))
lower <- 150
limit <- 10
MU <- runif( 1, 160, 170 )
SIGMA <- 0.05 * MU
height <- rnorm( N, MU, SIGMA )
for( i in 1:N ){
diff <- height[i] - lower
if( diff  >= 0 & diff <= limit  )
can <- TRUE
ELSE
CAN <- FALSE
}
FrenchDraftHeights.rS
rm( list=ls())
N <- floor( runif( 1, 100000, 200000 ))
lower <- 150
limit <- 10
MU <- runif( 1, 160, 170 )
SIGMA <- 0.05 * MU
height <- rnorm( N, MU, SIGMA )
for( i in 1:N ){
diff <- height[i] - lower
if( diff  >= 0 & diff <= limit  )
can <- TRUE
else
CAN <- FALSE
}
height <- rnorm( n, MU, SIGMA )
rm( list=ls())
N <- floor( runif( 1, 100000, 200000 ))
MU    <- 65
SIGMA <- 5
height <- rnorm( N, MU, SIGMA )
SIGMA <- rnorm( 1, 5, 1 )
SIGMA <- abs( rnorm( 1, 3, 1 ) )
SIGMA <- abs( runif( 1,1, 2 ) )
height <- rnorm( N, MU, SIGMA )
N <- floor( runif( 1, 10000, 50000 ))
height <- rnorm( N, MU, SIGMA )
df <- sample.int( 100, 1 )
df <- sample.int( 100, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
df <- sample.int( 100, 1 )
df <- sample.int( 30, 1 )
delta  <- height - 2 * SIGMA
0.025
0.025*N
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 2 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodgers <- rbinom( N, 1, 0.025 )
height  <- ifelse( dodger == 1,
height,
height-limit-rnorm( 1, height-limit-1 ), 1 )
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 2 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodgers <- rbinom( N, 1, 0.025 )
height  <- ifelse( dodger == 1,
height,
height-limit-rnorm( 1, height-limit-runif( 0, 1 )))
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 2 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.025 )
height  <- ifelse( dodger == 1,
height,
height-limit-rnorm( 1, height-limit-runif( 0, 1 )))
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 2 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.025 )
height  <- ifelse( dodger == 1,
height,
height-limit-runif( 1, 1, 2 ))
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 2 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.025 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 1)
hist(height)
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.025 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 1)
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.025 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
require(ggplot2)
qplot( height)
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.01 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
require(ggplot2)
qplot( height)
rn( ls=ls=ist())
rn( ls=ist())
rm( ls=list())
rm( list=ls())
write( Draft, file="Draft.csv")
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.01 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
Draft <- data.frame( height )
write( Draft, file="Draft.csv")
rm( list=ls())
rm( list=ls())
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.01 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
Draft <- data.frame( height )
write( Draft, file="Draft.csv")
rm( list=ls())
rm( list=ls())
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.01 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
Draft <- data.frame( height )
write( Draft, file="Draft.csv")
rm( list=ls())
FrenchDraftHeights.rS
rm( list=ls())
df <- sample.int( 30, 1 )
N <- floor( runif( 1, 10000, 50000 ))
MU    <- rnorm( 1, 65, 1 )
SIGMA <- abs( runif( 1, 1, 2 ))
limit <- floor( MU - 1.5 * SIGMA  )
height <- rnorm( N, MU, SIGMA )
dodger <- rbinom( N, 1, 0.01 )
height <- ifelse(  dodger==0,
height,
height - (height-limit) - 0.5)
Draft <- data.frame( height )
write.csv( Draft, file="Draft.csv")
rm( list=ls())
