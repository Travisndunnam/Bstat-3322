Beer <-
read.table(  "http://www.stat.ufl.edu/~winner/data/pricequal.dat" )
Beer <-
read.table(  "http://www.stat.ufl.edu/~winner/data/pricequal.dat" )
`colnames(Beer)<-`( "Price", "Quality", "Number" )
colnames(Beer)<-`( "Price", "Quality", "Number" )
`
colnames(Beer)<-( "Price", "Quality", "Number" )
colnames(Beer)<- c( "Price", "Quality", "Number" )
m <- dim(Beer)[1]
m <- dim(Beer)[1]
rows <- rep( (Beer[i,1:2], Beer[i,3]) )
}
Beer[1,1:2]
rep( Beer[1,1:2], Beer[i,3])
rep( Beer[1,1:2], Beer[1,3])
i = 1
Beer[i,3]
X <- matrix( rep(  Beer[i, 1:2], j )  )
j <- Beer[i,3]
X <- matrix( rep(  Beer[i, 1:2], j )  )
X <- as.matrix( rep(  Beer[i, 1:2], j ), ncols=2  )
X
X <- Beer[i,1:2]
for( k in 1:j ){
B <- rbind( B, X )
Beer <-
read.table(  "http://www.stat.ufl.edu/~winner/data/pricequal.dat" )
colnames(Beer)<- c( "Price", "Quality", "Number" )
B <- NULL
m <- dim(Beer)[1]
for( i in m ){
j <- Beer[i,3]
X <- Beer[i,1:2]
for( k in 1:j ){
B <- rbind( B, X )
}
}
}
Beer <-
read.table(  "http://www.stat.ufl.edu/~winner/data/pricequal.dat" )
colnames(Beer)<- c( "Price", "Quality", "Number" )
B <- NULL
m <- dim(Beer)[1]
for( i in m ){
j <- Beer[i,3]
X <- Beer[i,1:2]
for( k in 1:j ){
B <- rbind( B, X )
}
}
B
m <- dim(Beer)[1]
for( i in m ){
j <- Beer[i,3]
X <- Beer[i,1:2]
for( k in 1:j ){
B <- rbind( B, X )
}
}
B
B <- NULL
Hanford <- read.table( "Hanford.txt"   )
colnames( Hanford ) <- c( "County", "Exposure", "Mortality"  )
n <- runif( 1, 20, 100 )
rm( list=ls())
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
marketRetrun <- runif( n, 0, 0.009 )
predictedRetrun <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
marketRetn ur<- runif( n, 0, 0.009 )
predictedRetrun <- runif( n, 0, 0.01 )
rm( list=ls())
n <- tound( runif( 1, 20, 100 ))
marketRetn ur<- runif( n, 0, 0.009 )
predictedRetrun <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
rm( list=ls())
n <- tound( runif( 1, 20, 100 ))
marketReturn ur<- runif( n, 0, 0.009 )
predictedRetrun <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
marketReturn ur<- runif( n, 0, 0.009 )
rm( list=ls())
n <- tound( runif( 1, 20, 100 ))
marketReturn <- runif( n, 0, 0.009 )
predictedRetrun <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
marketReturn <- runif( n, 0, 0.009 )
n <- round( runif( 1, 20, 100 ))
marketReturn <- runif( n, 0, 0.009 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
rm( list=ls())
n <- round( runif( 1, 20, 100 ))
marketReturn <- runif( n, 0, 0.009 )
predictedRetrrn <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
predictedRetrrn <- runif( n, 0, 0.01 )
predictedReturn <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
rm( list=ls())
n <- round( runif( 1, 20, 100 ))
marketReturn <- runif( n, 0, 0.009 )
predictedReturn <- runif( n, 0, 0.01 )
ZodiacInvestment <- data.frame( marketReturn, predictedReturn )
rm( list=lls())
rm( list=ls())
write.csv( ZodiacInvestments, file="ZodiacInvestments.csv" )
rm( list=ls())
n <- round( runif( 1, 20, 100 ))
marketReturn <- runif( n, 0, 0.009 )
predictedReturn <- runif( n, 0, 0.01 )
ZodiacInvestments <- data.frame( marketReturn, predictedReturn )
write.csv( ZodiacInvestments, file="ZodiacInvestments.csv" )
rm( list=ls())
Mazadas <- read.table( "Mazada.txt ")
Mazadas <- read.table( "Mazadas.txt ")
Mazadas$age <- 1991 - Mazadas$Year
Price <- as.numeric( Price )
colnames( Mazadas ) <- c( "Year", "Price" )
Price <- as.numeric( Price )
Mazadas <- read.table( "Mazadas.txt ")
colnames( Mazadas ) <- c( "Year", "Price" )
Mazadas$Year  <- as.numeric( Maxadas$Year )
Mazadas$Price <- as.numeric( Mazadas$Price )
Mazadas$age <- 1991 - Mazadas$Year
Mazadas$Year
Year <- as.numeric(  Mazadas$Year )
Mazadas <- read.table( "Mazadas.txt ")
colnames( Mazadas ) <- c( "Year", "Price" )
Mazadas$Year        <- as.numeric(  Mazadas$Year )
Mazadas$Price       <- as.numeric( Mazadas$Price )
Mazadas$age         <- 1991 - Mazadas$Year
Units <- read.table( "Rents.dat" )
rm( list=ls() )
Units <- read.table( "Rents.dat" )
colnames( Units ) <- c( "Capital", "Rents")
Rents$Capital <- as.numeric( Rents$Capital )
UNits$Capital <- as.numeric( Units$Capital )
Units$Capital <- as.numeric( Units$Capital )
rm( list=ls() )
Units <- read.table( "Rents.dat" )
colnames( Units ) <- c( "Capital", "Rents")
Units$Capital <- as.numeric( Units$Capital ) / 1000
Units$Rents   <- as.numeric( Units$Rents ) / 1000
head( Units )
rm( list=ls() )
Units <- read.table( "Rents.dat" )
colnames( Units ) <- c( "Capital", "Rents")
Units$Capital <- as.numeric( Units$Capital )
Units$Rents   <- as.numeric( Units$Rents )
head( Units )
Units <- read.csv( "Rents.csv" )
colnames( Units ) <- c( "Capital", "Rents")
Units$Capital <- as.numeric( Units$Capital )
Units$Rents   <- as.numeric( Units$Rents )
head( Units )
Units <- Units[,-2]
head( Units )
colnames( Units[,2] ) <- c( "Rents" )
colnames( Units ) <- c( "Capital", "Rents")
install.packages( c( "lahman",
"sqldf" ) )
install.packages( c( "Lahman",
"sqldf" ) )
require( Lahman )
?"Lahman"
data( Batting )
Batting <- Baffing[Batting$yearID>1999,]
Batting <- Batting[Batting$yearID>1999,]
head( Batting )
tail( Batting )
head( Batting[,1:10] )
head( Batting[,1:15] )
tail( Batting[,1:14] )
data( Teams )
data( Teams )
Teams <-
Teams[Teams$yearID > 1999, ]
head( Teams[, 1:14] )
head( Teams[, 1:14] )
Teams[Teams$yearID > 1999, ]
head( Teams[, 1:10] )
tail( Teams[, 1:10] )
data( Salaries )
Salaries <- Salaries[ yearID > 1999 ]
Salaries <- Salaries[ yearID > 1999, ]
Salaries <- Salaries[ Salaries#yearID > 1999, ]
)
Salaries <- Salaries[ Salarie$yearID > 1999, ]
heas( Salaries )
head( Salaries )
Salaries <- Salaries[ Salarie$yearID > 1999, ]
head( Salaries )
[ Salaries$yearID > 1999, ]
Salaries <- Salaries[ Salaries$yearID > 1999, ]
tail( Salaries )
JT <-
sqldf( "Select teamID,
yearID
FROM   Teams" )
require( Lahman )
require( sqldf )
JT <-
sqldf( "Select teamID,
yearID
FROM   Teams" )
JT
JT <-
sqldf( "Select T.yearID
T.teamID
FROM   Teams T" )
JT <-
sqldf( "Select T.yearID,
T.teamID
FROM   Teams T" )
JT <-
sqldf( "Select T.yearID,
T.teamID,
T.W as `Wins`
FROM   Teams T
Natural Join
Batting B
" )
JT <-
sqldf( "Select T.yearID,
T.teamID,
T.W as `Wins`
FROM   Teams T
Natural Join
Batting B
" )
TeamSalary <-
sqldf(
"SELECT yerarID,
teamID,
SUM( salary)
FROM   Salareis
GROUP  yearID,
teamID"
)
TeamSalary <-
sqldf(
"SELECT yearID,
teamID,
SUM( salary) as `teamSalary`
FROM   Salareis
GROUP  yearID,
teamID"
)
TeamSalary <-
sqldf(
"SELECT   yearID,
teamID,
SUM( salary) as `teamSalary`
FROM     Salareis
GROUP BY yearID,
teamID"
)
TeamSalary <-
sqldf(
"SELECT   yearID,
teamID,
SUM( salary) as `teamSalary`
FROM     Salaries
GROUP BY yearID,
teamID"
)
rm( list=ls())
#
###########################################################
# The following R-statement cabn be deleted after it runs #
# once and install pthe packages                          #
###########################################################
#
install.packages( c( "Lahman",
"sqldf"   ))
install.packages(c("Lahman", "sqldf"))
data( Teams )
Teams <-
Teams[Teams$yearID > 1999, c( 1:2, 10) ]
head( Teams[, 1:10] )
tail( Teams[, 1:10] )
success <- require( Lahman )
require( Lahman )
success <- require( saldf )
require( sqldf )
success <- require( saldf )
success <- require( sqldf )
require( sqldf )
data( Teams )
Teams <-
Teams[Teams$yearID > 1999, c( 1:2, 10) ]
eams <-
Teams[Teams$yearID > 1999, c( 1:2, 9) ]
data( Teams )
Teams <-
Teams[Teams$yearID > 1999, c( 1:2, 9) ]
head( Teams )
tail( Teams )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary )
FROM       Salaries
GROUP BY   yearID,
teamID" )
data( Salaries )
Salaries <- Salaries[ Salaries$yearID > 1999, ]
head( Salaries )
tail( Salaries )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary )
FROM       Salaries
GROUP BY   yearID,
teamID" )
TeamSalaries
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary ) / 1000000
FROM       Salaries
GROUP BY   yearID,
teamID" )
head( TeamSalaries )
tail( TeamSalaries )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary ) / 1000000 AS teamSalary
FROM       Salaries
GROUP BY   yearID,
teamID" )
head( TeaMSalaries )
tail( TeamSalaries )
rm( list=ls())
#
#
###########################################################
# We attempt to require the package.  If the require      #
# fails we install the package and require it again       #
###########################################################
#
success <- require( Lahman )
if( !success){
install.packages( "Lahman" )
require( Lahman )
}
success <- require( sqldf )
if( !success){
install.packages( 'sqldf' )
require( sqldf )
}
#
#
###########################################################
# We obtain the team tables for the same time period.     #
###########################################################
#
data( Teams )
TeamWins <-
Teams[Teams$yearID > 1999, c( 1:2, 9) ]
head( Teams )
Teams[Teams$yearID > 1999, c( 1:2, 9) ]
head( Teams )
Teams[Teams$yearID > 1999, c( 1:2, 9) ]
head( TeamWins )
tail( TeamWins )
tail( TeamWins )
#
#
##########################################################
# Now we get the player salaries for the same time. We   #
# Group the salaries by year and team for hoining to     #
# the Teams table.                                       #
##########################################################
#
data( Salaries )
Salaries <- Salaries[ Salaries$yearID > 1999, ]
head( Salaries )
tail( Salaries )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary ) / 1000000 AS teamSalary
FROM       Salaries
GROUP BY   yearID,
teamID" )
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins
Natural Join
TeamSalaries" )
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins W,
TeamSalaries S
WHERE W.yearID = S.yearID
AND W.teamID = S.teamID" )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary ) / 1000000 AS teamSalary
FROM       Salaries
GROUP BY   yearID,
teamID" )
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins W,
TeamSalaries S
WHERE W.yearID = S.yearID
AND W.teamID = S.teamID" )
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins W,
TeamSalaries S
WHERE W.yearID = S.yearID
AND W.teamID = S.teamID" )
###########################################################
# Clear the environment.                                  #
###########################################################
#
rm( list=ls())
#
#
###########################################################
# We attempt to require the package.  If the require      #
# fails we install the package and require it again       #
###########################################################
#
success <- require( Lahman )
if( !success){
install.packages( "Lahman" )
require( Lahman )
}
success <- require( sqldf )
if( !success){
install.packages( 'sqldf' )
require( sqldf )
}
#
#
###########################################################
# We obtain the team tables for the same time period.     #
###########################################################
#
data( Teams )
TeamWins <-
Teams[Teams$yearID > 1999, c( 1,3, 9) ]
head( TeamWins )
tail( TeamWins )
#
#
##########################################################
# Now we get the player salaries for the same time. We   #
# Group the salaries by year and team for hoining to     #
# the Teams table.                                       #
##########################################################
#
data( Salaries )
Salaries <- Salaries[ Salaries$yearID > 1999, ]
head( Salaries )
tail( Salaries )
TeamSalaries <-
sqldf( "Select     yearID,
teamID,
sum( salary ) / 1000000. AS teamSalary
FROM       Salaries
GROUP BY   yearID,
teamID" )
head( TeaMSalaries )
tail( TeamSalaries )
###########################################################
# Now we join the TeamSalaries with the TeamWins tables   #
# using a natrual join.                                   #
###########################################################
#
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins W,
TeamSalaries S
WHERE W.yearID = S.yearID
AND W.teamID = S.teamID" )
head( SalaryWins )
write.csv(  SalryWins, file="SalaryWin.cwv" )
write.csv(  SalaryWins, file="SalaryWin.cwv" )
rm( list=ls() )
write.csv(  SalaryWins, file="SalaryWin.csv" )
SalaryWins <-
sqldf( "
Select *
FROM   TeamWins W,
TeamSalaries S
WHERE W.yearID = S.yearID
AND W.teamID = S.teamID" )
