set.seed( 11235813 )
require( ggplot2 )
ggplot( data.frame( PPM ),
aes( x=PPM )) +
geom_dotplot()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
require( ggplot2 )
ggplot( data.frame( PPM ),
aes( x=PPM )) +
geom_dotplot( binwidth = 1 ) +
xlab( "Pollutant (PPM)" ) +
ylab( "Count" ) +
ggtitle( "Genesee River Pollutant Measurements")
ybar <- round( mean(PPM), 1)
s    <- round( sd( PPM ), 1)
adjusted <- PPM - ybar + 34
adjusted
cat( "mean(Adjusted)=", round(mean(adjusted),1 )
require( simpleboot )
bootOut <- one.boot( adjusted,
mean,
5000 )
require( simpleboot )
bootOut <- one.boot( adjusted,
mean,
5000 )
pValue <- length( adjusted(adjusted < ybar) / reps )
pValue <- length( adjusted( adjusted < ybar) / reps )
lowerTail <- adjusted[ adjusted < ybar ]
pValue <- length( lowerTail ) / reps
```
lowerTail <- adjusted[ adjusted < ybar ]
pValue <- length( lowerTail ) / reps
pValue <- length( lowerTail ) / Reps
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
pValue <- length( lowerTail ) / reps
pValue <- round( length( lowerTail ) / reps, 4 )
plotColor <- ifelse( ajdutsed <= ybar, "red", "black" )
plotColor <- ifelse( adjutsed <= ybar, "red", "black" )
plotColor <- ifelse( adjusted <= ybar, "red", "black" )
RD <- data.frame( adjusted, plotColor )
plotColor <- ifelse( adjusted <= ybar, "red", "black" )
RD <- data.frame( adjusted, plotColor )
ggplot( RD,
aes( x=adjusted )) +
geom_dotplot()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
xx <- round( 10000 * pValue )
plotColor <- ifelse( adjusted <= ybar, "red", "black" )
RD <- data.frame( adjusted, plotColor )
ggplot( RD,
aes( x=adjusted )) +
geom_dotplot()
plotColor <- ifelse( rd <= ybar, "red", "black" )
rd <- bootOut$t
plotColor <- ifelse( rd <= ybar, "red", "black" )
RD <- data.frame( rd, plotColor )
ggplot( RD,
aes( x=adjusted )) +
geom_dotplot()
ggplot( RD,
aes( x=adjusted )) +
geom_dotplot()
ggplot( RD,
aes( x=adjusted )) +
geom_dotplot( dotsize = 0.25 )
geom_dotplot( dotsize = 0.05 )
ggplot( RD,
aes( x=adjusted )) +
geom_histiogram( binwidth=2  )
ggplot( RD,
aes( x=adjusted )) +
geom_histogram( binwidth=2  )
ggplot( RD,
aes( x=adjusted )) +
geom_histogram( binwidth=1  ) +
xlab( expression( bar(y) )  ) +
ylab( "Frequency" )
ggplot( RD,
aes( x=adjusted )) +
geom_histogram( binwidth=1,
color="black",
aes( fill=pltColor )) +
xlab( expression( bar(y) )  ) +
ylab( "Frequency" )
ggplot( RD,
aes( x=adjusted )) +
geom_histogram( binwidth=1,
color="black",
aes( fill=plotColor )) +
xlab( expression( bar(y) )  ) +
ylab( "Frequency" )
rm( list=ls() )
rm( list=ls() )
n <- 500
s <- 251
f <- n - s
survey <- c( rep( 1, s ),
rep( 0, s ))
rm( list=ls() )
n <- 500
s <- 263
f <- n - s
survey <- c( rep( 1, s ),
rep( 0, s ))
table(survey)
f <- n - s
phat <- round( s / n )
phat <- round( sum(survey)/ n, 3 )
rd <- pbinom( 0:500, 500, 0.50 )
n <- 500                            # Survey size
x <- 0:500                          # Possible number of successful surveys
n <-
probability <-
pbinom( x, 500, 0.50 )          # Compute the probability of each
RD <- data.frame( x, probability )  # outcome
require( ggplot2)
ggplot( aes(RD),
aes(x=x, y=probabilty )) +
geom_line()
require( ggplot2)
ggplot( RD,
aes(x=x, y=probabilty )) +
geom_line()
n <- 500                            # Survey size
X <- 0:500                          # Possible number of successful surveys
n <-
p <-
pbinom( x, 500, 0.50 )          # Compute the probability of each
RD <- data.frame( x, pr )            # outcome
require( ggplot2)
ggplot( RD,
aes(x=x, y=pr )) +
geom_line()
n <- 500                            # Survey size
X <- 0:500                          # Possible number of successful surveys
n <-
p <-
pbinom( x, 500, 0.50 )          # Compute the probability of each
RD <- data.frame( x, pr )            # outcome
require( ggplot2)
ggplot( RD,
aes(x=x, y=pr )) +
geom_line()
n <- 500                            # Survey size
X <- 0:500                          # Possible number of successful surveys
n <-
p <-
pbinom( x, 500, 0.50 )          # Compute the probability of each
RD <- data.frame( x, pr )            # outcome
require( ggplot2)
ggplot( RD,
aes(x=x, y=pr )) +
geom_line()
n <- 500                            # Survey size
x <- 0:500                          # Possible number of successful surveys
n <-
pr <-
dbinom( x, 500, 0.50 )          # Compute the probability of each
RD <- data.frame( x, pr )            # outcome
require( ggplot2)
ggplot( RD,
aes(x=x, y=pr )) +
geom_bar()
trueMH <- c( rep( 1, 250 ),
rep( 0, 250 ))
trueMH <- c( rep( 1, 250 ),
rep( 0, 250 ))
table(trueNH)
trueNH <- c( rep( 1, 250 ),
rep( 0, 250 ))
table(trueNH)
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
5000 )
rD <- bootOut$t
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_hiostogram(  binwidth=0.005,
color='black',
fill='yellow')
require( ggplot2 )
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
5000 )
rd <- bootOut$t
require( ggplot2 )
set.seed( 9987 )
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_hiostogram(  binwidth=0.005,
color='black',
fill='yellow')
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
5000 )
rd <- bootOut$t
require( ggplot2 )
set.seed( 9987 )
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_histogram(  binwidth=0.005,
color='black',
fill='yellow')
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
10000 )
rd <- bootOut$t
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_histogram(  binwidth=0.005,
color='black',
fill='yellow')
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
10000 )
rd <- bootOut$t
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_histogram(  binwidth=0.005,
color='blue',
fill='yellow') +
geom_segment( x=phat, y=0,
xend = phat, y=1000)
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
10000 )
rd <- bootOut$t
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_histogram(  binwidth=0.005,
color='blue',
fill='yellow') +
geom_segment( x=phat, y=0,
xend = phat, yend=1000)
require( simpleboot )
bootOut <- one.boot( trueNH,
mean,
10000 )
rd <- bootOut$t
ggplot( data.frame( rd ),
aes(x=rd)) +
geom_histogram(  binwidth=0.005,
color='blue',
fill='yellow') +
geom_segment( x=phat, y=0,
xend = phat, yend=1100) +
xlab( expression( hat(p) )) +
ylab( "Frequency ") +
ggtitle( "Bootstrap sampling distrubtion of Null Hypothesis" )
count <- length( rd[rd>phat] )
pValue <- round( count / 10000, 4 )
count <- length( rd[rd>phat] )
pValue <- round( count / 10000, 4 )
require( LOck5Data )
require( Lock5Data )
rm(list=ls())
set.seed( 14925 )
require( Lock5Data )
data( CommurteAtlanta )
data( CommuteAtlanta )
Males <- CommuteAtlanta[CommuteAtlanta$Sex="M",4]
Males <- CommuteAtlanta[CommuteAtlanta$Sex=="M",4]
Females <- CommuteAtlanta[CommuteAtlanta$Sex=="F",4]
require( ggplot2 )
ggplot( CommuteAtlanta,
aes(x=Sex, y=Time)) +
boxplot()
ggplot( CommuteAtlanta,
aes(x=Sex, y=Time)) +
boxplot( x=Se )
ggplot( CommuteAtlanta,
aes(x=Sex, y=Time)) +
boxplot( x=Sex )
CommuteAtlanta$Sex
ggplot( CommputeAtlanta,
aes( x=Sex, y=Time)) +
geom_boxplot()
ggplot( CommuteAtlanta,
aes( x=Sex, y=Time)) +
geom_boxplot()
require( ggplot2 )
ggplot( CommuteAtlanta,
aes( x=Sex, y=Time)) +
geom_boxplot() +
xlab( "Gender" ) +
ylab( "Time in minutes" ) +
ggtitle( "Commute Atlanta \n Commute time by gender")
barM <- round( mean(males), 1 )
barF <- round( mean( Females ), 1 )
barM <- round( mean( Males), 1 )
barF <- round( mean( Females ), 1 )
barM     <- round( mean( Males), 1 )
barF     <- round( mean( Females ), 1 )
meanDif  <- barM - barF
adjM <- Males - barM
adjF <- Males - BarF
round( mean( adjM ), 1 )
adjF <- Males - BarF
require( simpleboot )
bootOut <- twoBoot( adjM,
adJ,
mean,
5000 )
require( simpleboot )
bootOut <- two.Boot( adjM,
mean,
5000 )
require( simpleboot )
bootOut <- two.boot( adjM,
mean,
5000 )
require( simpleboot )
bootOut <- two.boot( adjM,
adjF,
mean,
5000 )
adjF <- Males - barF
adjM <- Males - barM
adjF <- Males - barF
round( mean( adjM ), 1 )
round( mean( adjF ), 1 )
bootOut <- two.boot( adjM,
adjF,
mean,
5000 )
rd <- bootOut$t
mean(rd)
mean(adjM)-mean(adjF)
mean(adjF)
adjM <- Males - barM
adjF <- Females - barF
round( mean( adjM ), 1 )
round( mean( adjF ), 1 )
require( simpleboot )
bootOut <- two.boot( adjM,
adjF,
mean,
5000 )
rd <- bootOut$t
mean(rd)
rd <- bootOut$t
ggplot( data.frame( rd ),
aes( x = rd )) +
geom_histogram( binwidth=0.5,
color="blue",
fill="yellow")
require( simpleboot )
bootOut <- two.boot( adjM,
adjF,
mean,
5000 )
rd <- bootOut$t
ggplot( data.frame( rd ),
aes( x = rd )) +
geom_histogram( binwidth=0.5,
color="blue",
fill="yellow") +
xlab( expression(bar(y)[M]-bar(y)[F]) ) +
ylab( "Frequency" ) +
ggtitle( expression( "Bootstrap sanpling distribution of",
bar(y)[M]-bar(y)[F]) )
ggplot( data.frame( rd ),
aes( x = rd )) +
geom_histogram( binwidth=0.5,
color="blue",
fill="yellow") +
xlab( expression(bar(y)[M]-bar(y)[F]) ) +
ylab( "Frequency" ) +
ggtitle( expression( paste("Bootstrap sanpling distribution of \n",
bar(y)[M]-bar(y)[F]) )
)
count <- length( rd[rd>=barDif])
barDif  <- barM - barF
count <- length( rd[rd>=barDif])
pValue <- 2 * count/5000
pValue <- round( 2 * count/5000, 4 )
