rm( list=ls())                         # Clear environment
###########################################################
# We directly read the comma seperated file over the      #
# internet.                                               #
###########################################################
#
URL <- "http://www.lock5stat.com/datasets/CommuteAtlanta.csv"
CA <- read.csv( URL )
head( CA )
tail( CA )
#
###########################################################
# We will create a new variable called Gender which will  #
# have c value of 0 if the variable Sex is a male and a   #
# value of 0 if the variable sex is a male.               #
###########################################################
#
CA$Gender <-                     # Add gender to
ifelse( CA$Sex=="F", 1, 0 )  # data frame.
#
head( CA )                       # Comfirm GEnder.
head( CA )
#
##########################################################
# Always plot raw data.  We will plot a bar-chart of the #
# raw data using the Sex variable.                       #
##########################################################
#
require( ggplot2 )        # For graphics grammar plotting
#
ggplot( CA,
aes( x=Sex)) +
geom_bar( color="black",
fill="blue" ) +
scale_x_discrete("Cut",
labels =
c( "F" = "Female",
"M" = "Male")) +
xlab( "Gender" ) +
ylab( "Frequency" ) +
ggtitle( "Commute Atlanta \nGender of Commuters" )
########################################################
# The sample proportion is simple the sample mean of   #
# binary datata (0 or one).  Therefore we can use the  #
# the sample mean of the one.boot function to boot-    #
# strap the sample proportion.                         #
########################################################
require( simpleboot )
bootObject <- one.boot(  CA$Gender,
mean,
R=1000 )
#######################################################
# Now we priont the bootstrap sample statistics.  The #
# smple statistic we are bootstraping is the sample   #
# proprtion.                                          #
#######################################################
phat   <- bootObject$t0
bsPhat <- mean( bootObject$t )
bias   <- bsPhat - phat
apb    <- abs( bias / phat ) * 100
se     <- sd( bootObject$t )
#
cat( "\nSample Proprtion Bootstrap  Statistics",
"\nOrginal Sample Proportion:   ", phat,
"\nBootstrap distribution mean:", bsPhat,
"\nBootstrap bias:             ", bias,
"\nAbsolute percent bais:      ", apb,
"\nBootstrap Standard error:   ", se )
#
#####################################################
# Confirm theta the bootstrap sampling distribution #
# Is approximately moundshaped.                     #
#####################################################
#
hist( bootObject,
xlab = "Bootstrap samples",
main = "Compute Atlanta \nProprtion Bootstrap Sampling distribution")
#
#####################################################
# The bootstrap sampling distribution looks to be   #
# mound-shaped and close to a normal distribution   #
#####################################################
#
#
#####################################################
# Analysis:                                         #
# The bootstraped sampling distribution appear to   #
# approximately normally distributed.               #
#####################################################
#
require( boot )
boot.ci( bootObject,
conf =c( 0.90, 0.95, 0.98, 0.99 ),
type="all" )
#
#####################################################
# Because the sampling distribution appears to be   #
# approximately noirmally distributed we will use   #
# The normal confidence interval.  Therefore our    #
# point estimate is 0.492 or 49.2%.  The 98% confi- #
# dence interval us from 0.440 through 0.54440 or   #
# from 44.0% to 54.4%.                              #
#####################################################
rm( list=ls())     # Clear environment.
#
#
###########################################################
# We need to convert the summerized sample results into   #
# the tabulated sample data.  That is we need to          #
# determine the number of indiviudals that agree and the  #
# number of iondividuals that did not agree,              #
###########################################################
phat <- 0.530
n    <- 1025
agree <- phat * n
response <- c( rep( 1, agree ), c(0, disagree)  )
disagree <- 1025 - agree
agree    <- round( phat * n, 0 )     # Round to an integer
disagree <- 1025 - agree
x         <- c( rep( 1, agree ),
c(0, disagree))
response  <- c( rep( "Agree", agree ),
rep( "Disagree", disagree))
# 0090-bootMean.r
#
# We demonstrate the bootstrapping of the sample proprtion when
# only the sample proportion and sample size are given.
#
# The source of this data is:
#
# http://www.gallup.com/poll/185528/trust-judicial-branch-sinks-new-low.aspx?g_source=Politics&g_medium=newsfeed&g_campaign=tiles
#
#
# The data we will use is described below:
#
# PRINCETON, N.J. -- Americans' trust in the judicial
# branch of the federal government has fallen significantly
# in the past year, and now a record-low 53% say they have
# "a great deal" or "a fair amount" of trust in it. Trust
# in the executive and legislative branches also remains
# near historical lows, but both were up slightly this year.
#
# Results for this Gallup poll are based on telephone
# interviews conducted Sept. 9-13, 2015, with a random
# sample of 1,025 adults, aged 18 and older, living in
# all 50 U.S. states and the District of Columbia.
#
#The poll was taken on SEPTEMBER 18, 2015.
#
#
rm( list=ls())     # Clear environment.
#
#
###########################################################
# We need to convert the summerized sample results into   #
# the tabulated sample data.  That is we need to          #
# determine the number of indiviudals that agree and the  #
# number of iondividuals that did not agree,              #
###########################################################
phat <- 0.530
n    <- 1025
agree <- phat * n
disagree <- n - agree
###########################################################
# Remark:                                                 #
# Note that the value of agree should be an integer. It   #
# not is equal to 543.25.  We will round to 543 and       #
# recompute agree and disagree.                           #
###########################################################
#
agree    <- round( phat * n, 0 )     # Round to an integer
disagree <- 1025 - agree
#
#
############################################################
# Now we create a data frame that has the same             #
# Caracteristivs as the sample.  we will also create a     #
# qualatative variable called response so we can draw a    #
# barchart of the orginal sample.                          #
############################################################
#
x         <- c( rep( 1, agree ),
c(0, disagree))
#
Response  <- c( rep( "Agree", agree ),
rep( "Disagree", disagree))
#
Df <- data.frame( Response, x )
rep( "Disagree", disagree )
x         <- c( rep( 1, agree ),
rep(0, disagree))
Df <- data.frame( Response, x )
require( ggplot )            # For graphics grammar plotting
require( ggplot2 )          # For graphics grammar plotting.
ggplot( DF,
aes( x=REsponse )) +
geom_bar( color="black",
fill=" yellow" )
DF <- data.frame( Response, x )
ggplot( DF,
aes( x=REsponse )) +
geom_bar( color="black",
fill=" yellow" )
ggplot( DF,
aes( x=REsponse )) +
geom_bar( color="black",
fill=" yellow" )
ggplot( DF,
aes( x=Response )) +
geom_bar( color="black",
fill=" yellow" )
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" )
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = 100 * ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" )
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = 100 * ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" ) +
scale_y_continuous(breaks=seq(0,60,10)) +
ylab( "Percent") +
ggtitle( "Trust in U.S. Judicial Branch Sinks to New Low of 53%" )
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = 100 * ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" ) +
scale_y_continuous(breaks=seq(0,60,5)) +
ylab( "Percent") +
ggtitle( "Trust in U.S. Judicial Branch Sinks to New Low of 53%" )
bootObject <- boot.one( DF$x,
mean,
R=1000 )
# require( simpleboot )
#
bootObject <- boot.one( DF$x,
mean,
R=1000 )
bootObject <- one.boot( DF$x,
mean,
R=1000 )
bootObject <- one.boot( DF$x,
mean,
R=1000 )
# 0090-bootMean.r
#
# We demonstrate the bootstrapping of the sample proprtion when
# only the sample proportion and sample size are given.
#
# The source of this data is:
#
# http://www.gallup.com/poll/185528/trust-judicial-branch-sinks-new-low.aspx?g_source=Politics&g_medium=newsfeed&g_campaign=tiles
#
#
# The data we will use is described below:
#
# PRINCETON, N.J. -- Americans' trust in the judicial
# branch of the federal government has fallen significantly
# in the past year, and now a record-low 53% say they have
# "a great deal" or "a fair amount" of trust in it. Trust
# in the executive and legislative branches also remains
# near historical lows, but both were up slightly this year.
#
# Results for this Gallup poll are based on telephone
# interviews conducted Sept. 9-13, 2015, with a random
# sample of 1,025 adults, aged 18 and older, living in
# all 50 U.S. states and the District of Columbia.
#
#The poll was taken on SEPTEMBER 18, 2015.
#
#
rm( list=ls())     # Clear environment.
#
#
###########################################################
# We need to convert the summerized sample results into   #
# the tabulated sample data.  That is we need to          #
# determine the number of indiviudals that agree and the  #
# number of iondividuals that did not agree,              #
###########################################################
phat <- 0.530
n    <- 1025
agree <- phat * n
disagree <- n - agree
###########################################################
# Remark:                                                 #
# Note that the value of agree should be an integer. It   #
# not is equal to 543.25.  We will round to 543 and       #
# recompute agree and disagree.                           #
###########################################################
#
agree    <- round( phat * n, 0 )     # Round to an integer
disagree <- 1025 - agree
#
#
############################################################
# Now we create a data frame that has the same             #
# Caracteristivs as the sample.  we will also create a     #
# qualatative variable called response so we can draw a    #
# barchart of the orginal sample.                          #
############################################################
#
x         <- c( rep( 1, agree ),
rep(0, disagree))
#
Response  <- c( rep( "Agree", agree ),
rep( "Disagree", disagree ))
#
DF <- data.frame( Response, x )
#
############################################################
# Draw a barchart of the data.                             #
############################################################
#
require( ggplot2 )          # For graphics grammar plotting.
#
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = 100 * ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" ) +
scale_y_continuous(breaks=seq(0,60,5)) +
ylab( "Percent") +
ggtitle( "Trust in U.S. Judicial Branch Sinks to New Low of 53%" )
#
#############################################################
# We now bootstrap the population percentahe using the same #
# technique as before.                                      #
#############################################################
#
# require( simpleboot )
#
bootObject <- one.boot( DF$x,
mean,
R=1000 )
#
#############################################################
# We print the bootstrap sample results as before.          #
#############################################################
phat   <- bootObject$t0
bsPhat <- mean( bootObject$t )
bias   <- bsPhat - phat
apb    <- abs( bias / phat ) * 100
se     <- sd( bootObject$t )
#
cat( "\nSample Proprtion Bootstrap  Statistics",
"\nOrginal Sample Proportion:   ", phat,
"\nBootstrap distribution mean:", bsPhat,
"\nBootstrap bias:             ", bias,
"\nAbsolute percent bais:      ", apb,
"\nBootstrap Standard error:   ", se )
#
#####################################################
# Confirm theta the bootstrap sampling distribution #
# Is approximately moundshaped.                     #
#####################################################
# 0090-bootMean.r
#
# We demonstrate the bootstrapping of the sample proprtion when
# only the sample proportion and sample size are given.
#
# The source of this data is:
#
# http://www.gallup.com/poll/185528/trust-judicial-branch-sinks-new-low.aspx?g_source=Politics&g_medium=newsfeed&g_campaign=tiles
#
#
# The data we will use is described below:
#
# PRINCETON, N.J. -- Americans' trust in the judicial
# branch of the federal government has fallen significantly
# in the past year, and now a record-low 53% say they have
# "a great deal" or "a fair amount" of trust in it. Trust
# in the executive and legislative branches also remains
# near historical lows, but both were up slightly this year.
#
# Results for this Gallup poll are based on telephone
# interviews conducted Sept. 9-13, 2015, with a random
# sample of 1,025 adults, aged 18 and older, living in
# all 50 U.S. states and the District of Columbia.
#
#The poll was taken on SEPTEMBER 18, 2015.
#
#
rm( list=ls())     # Clear environment.
#
#
###########################################################
# We need to convert the summerized sample results into   #
# the tabulated sample data.  That is we need to          #
# determine the number of indiviudals that agree and the  #
# number of iondividuals that did not agree,              #
###########################################################
phat <- 0.530
n    <- 1025
agree <- phat * n
disagree <- n - agree
###########################################################
# Remark:                                                 #
# Note that the value of agree should be an integer. It   #
# not is equal to 543.25.  We will round to 543 and       #
# recompute agree and disagree.                           #
###########################################################
#
agree    <- round( phat * n, 0 )     # Round to an integer
disagree <- 1025 - agree
#
#
############################################################
# Now we create a data frame that has the same             #
# Caracteristivs as the sample.  we will also create a     #
# qualatative variable called response so we can draw a    #
# barchart of the orginal sample.                          #
############################################################
#
x         <- c( rep( 1, agree ),
rep(0, disagree))
#
Response  <- c( rep( "Agree", agree ),
rep( "Disagree", disagree ))
#
DF <- data.frame( Response, x )
#
############################################################
# Draw a barchart of the data.                             #
############################################################
#
require( ggplot2 )          # For graphics grammar plotting.
#
ggplot( DF,
aes( x=Response )) +
geom_bar( aes( y = 100 * ..count.. / sum( ..count.. )),
color="black",
fill=" yellow" ) +
scale_y_continuous(breaks=seq(0,60,5)) +
ylab( "Percent") +
ggtitle( "Trust in U.S. Judicial Branch Sinks to New Low of 53%" )
#
#############################################################
# We now bootstrap the population percentahe using the same #
# technique as before.                                      #
#############################################################
#
# require( simpleboot )
#
bootObject <- one.boot( DF$x,
mean,
R=1000 )
#
#############################################################
# We print the bootstrap sample results as before.          #
#############################################################
phat   <- bootObject$t0
bsPhat <- mean( bootObject$t )
bias   <- bsPhat - phat
apb    <- abs( bias / phat ) * 100
se     <- sd( bootObject$t )
#
cat( "\nSample Proprtion Bootstrap  Statistics",
"\nOrginal Sample Proportion:   ", phat,
"\nBootstrap distribution mean:", bsPhat,
"\nBootstrap bias:             ", bias,
"\nAbsolute percent bais:      ", apb,
"\nBootstrap Standard error:   ", se )
#
#####################################################
# Confirm theta the bootstrap sampling distribution #
# Is approximately moundshaped.                     #
#####################################################
hist( bootObject,
xlab = "Bootstrap samples",
main = "Compute Atlanta \nProprtion Bootstrap Sampling distribution")
#
#####################################################
# The bootstrap sampling distribution looks to be   #
# mound-shaped and close to a normal distribution   #
#####################################################
#
#
#####################################################
# Analysis:                                         #
# The bootstraped sampling distribution appear to   #
# approximately normally distributed.               #
#####################################################
#
require( boot )
boot.ci( bootObject,
conf =c( 0.90, 0.95, 0.98, 0.99 ),
type="all" )
#
#####################################################
# Because the sampling distribution appears to be   #
# approximately noirmally distributed we will use   #
# The normal confidence interval.  Therefore our    #
# point estimate is 0.492 or 49.2%.  The 98% confi- #
# dence interval us from 0.440 through 0.54440 or   #
# from 44.0% to 54.4%.                              #
#####################################################
require( boot )
boot.ci( bootObject,
conf =c( 0.90, 0.95, 0.98, 0.99 ),
type="all" )
?boot.ci
boot.ci( bootObject,
conf =c( 0.90, 0.95, 0.98, 0.99 ),
type="norm" )
